<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.intelligent.dao.WzlBigdataMapper">
  <resultMap id="BaseResultMap" type="com.intelligent.entity.WzlBigdata">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="num" jdbcType="DECIMAL" property="num" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="update_flag" jdbcType="VARCHAR" property="updateFlag" />
    <result column="dict" jdbcType="VARCHAR" property="dict" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `name`, code, `time`, num, create_by, create_date, update_by, update_date, `status`, 
    update_flag, dict
  </sql>

  <select id="selectList" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from wzl_bigdata
    limit 5000000
  </select>

  <select id="selectCount" resultType="java.lang.Integer">
    select count(*)
    from wzl_bigdata
  </select>

  <insert id="insert">
    insert into wzl_bigdata (`id`,`name`, code, `time`,
    num, create_by, create_date,
    update_by, update_date, `status`,
    update_flag, dict)
    values (#{id,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP},
    #{num,jdbcType=INTEGER}, #{createBy,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP},
    #{updateBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR},
    #{updateFlag,jdbcType=VARCHAR}, #{dict,jdbcType=VARCHAR})
  </insert>
</mapper>